{
  "episodeId": 85,
  "segments": [
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:00:05",
      "text": "AMITFMはIT企業で働く2人のままが子育てよテクノロジーでハッピーにをコンセプトにおしゃべりする子育てテックポドキストですフードバックはハッシュタグAMITFMもしくは小ノートに貼ってあるお便りフォームより募集しておりますはいはいではいじゃあ8月にですね休みのあのまあ中盤まっただなというところで今日はですねいきなりですけど、AIの話が結構前回できなかったんで、構、盛り溜まっててですね。AIトークに入れたらいいなと思っとるんですが。AIっていうかですね、また最近手元でゴニゴニやってたことなんですが、ずっと話しているまあマミットFのポドキストのですねワクフローですよねなんか制作をもっと効率化にできないかなチャレンジをもうまあずっとずっとやってるよねでまあ一回やってみてはやっぱやめたりとかなんか新しい技術出てきたかなこっちでやってみようとかまあなんでなんだろう全てを手でやってるというよりかはなんか決まってきらないって感じだったんですよずーっとはいはいはいいろいトライしてるし効率化できてる気はするだけどいまいちバチッとこれだこれでもうずっと行くぞまあそれはないんですけどずっと行くぞはないかもしれないんだけどそういうものが決まんなかったっていう感じなのがちょっと今回はだいぶ見えたぞともうこれで行こうしばらくはっていうところまでやっと行き着いたんでその話をできたなと思ってて。それは何かというと、基本的な考え方として、全ての作業、7個8個ぐらい分解するとあるんですけど、収録から、編集から、ップロードからなんじゃない。もう一気通過でポチッという夢は諦めました。まず。そこはなかなか難しいと。やっぱり無理ですね。"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:02:31",
      "text": "どうやってもやっぱり編集一つとっても効率的にすることはもちんできるけど人間が聞かないで出すわけもいかないしなんか色々何をどこをって部分的にちょここちょこってやってたのがですけれどももう決めでですね自動化するところとしないところに分けるでさらに自動化の中でもですよちょっと種類があって一つはいわゆるワクフロー型ただの自動化オートメーションのカテゴリーのものですねともう一つはLLを使うものAIを使うものという主に2種類そっちもあるなと思ってこれも本当色々やってなんかADKとかそのエージェのデベロリメントキットとかで実装してみたりもしたんだけどなんか種類が違うものをなんかやっぱ無理に一つのワクフーみたいなちょっと結構なんか難くて色々なんで一個一個を分けて考える種類とに性質ごとにとかそういうふになったんですでっと全部やる自動化する夢をしててまず4つの手順に分解しましたと。一つ目が、まず一番最初に来るのが音源編集の効率化なんですけど、そう。で、これは内容としてはフィラーを撮ったりとか、そうですね、間を撮ったりとかもそうだけど、やっぱり自分で聞きながら、ここいらなかったなみたいなことをっぱカットしたりとか、フラー以外にも、なんか一律で消しきれないところがあったりしますよねそこは私がやるんですがちょっとやるまでが大変だったんですよちょっと前にずっと一番長くやってたのはズームで撮ってそれをローカルのアプリケーションであるツールですよねMacのネティブのツールに読み込ませてなんかカットしたり編集したりなんかノーマライズしたり"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:04:55",
      "text": "最初と最後のイントロか、付けたり。結構それが、まあまあコストだったんですよね。なんでそういうふにやってたかっていうと、これもめっちゃいろろ楽しんでたんですけど、は一番いいのは、リーサイドFのクラウド型のツールに、録音からやで、ワンストップで、そのまま、そのままもうバーって選手できるみたいな、にしちゃえば、楽だったんですが、そこがなんか安定しなかったんですよ、ずっと。なんかそもそも二人で、複数人で撮れなかったりとか、なんか出たばっかりっていう、なんか超根本的なものでとか、日本語が全然なんだろう、対応できないだとか、なんかなんだか安定しない音質もそうだし、なんかいろいろ問題があだからそういう風にしてたんですよ。時が過ぎて、ReversedFMがかなり進化していて、そうすると、っぱりReversedFMのような、そもそもサーバー側で撮っておいて、バックアップもあるし、撮っておいて、そこで一応そのまま編集もでき、UIとか1つ撮ってもやっぱり結構違うんですよね、なんか。そう思い出したけど、一番最初の頃、っぱこれなんか40分とか撮るから、もうすごい固まっちゃってしょうがなかったんですよね。そうか、そうか。やっぱさ、ブラウザで結構やっぱ技術的にも、そうだね。難易度高いはずで、音源を波形にしてさ、で、ここ切り取ったり、みたいな手でさ、こう、ガチャガチャガチャチャやっていくのって、やっぱフロントエンドの人たちだったら多分、大変なのがわかるのかもしれないんですけどやっぱブラウザでそれやるのなかなか重たいんですよねそれがきっとやっぱネテブアプリの方がそこら辺はすごく安定してたんでっていうのもあったとなのでいろいろ何か準備が整ってきたんでクラウドぶっちゃけそれが安定してできるんだったらそうしとくにこうしたことないんでツールがあるからね"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:07:14",
      "text": "それにまず寄せることにやっぱりしたっていうのが1個大きな意思決ですね。副産物として、もう今課金してるんですけど、めちゃめちゃいいのが、トランスクリプトを書き起こしを自動で作ってくれるんで、ポチでダウンロードできるんですね。なるほどね。だからこの結局いろいろトライしてたの、もう1個ここら辺の周辺ですんげー大変だったのが音源をそのまま小ノートとか作るなのか音源を一度書き起こしにして結局テキストからだとなんかいろんなLが異様にやりやすくなるんですけどプログラムもですよねテキストだらどうにでもなるんだけど音源から私はなんかやるっていう方法も結構考えてて最初はそうするとなんだっあのえっとなんだったっけなPythonかけるやつあるですGoogleのWeb上でかけるやつ名前が全然出てこないGoogle名前出てこないコラボコラボGooogleコボあれでPythonで書いてみたいなのも試したことあったんですよPython書いてなんかFPEGみたいなツールだったりとかPythonコードでプロラムでなんかするそれでなんなら途中でLLのコールミニーコールしてみたいなのも書いたことがあったんだけど、結局これもその音源をなんとかするっていうののサイズがでかすぎる問題でまあうまくいかなかった、これもですね。やっぱこの生音源っていうののこのね、巨大なリソースからするか、っとまあそれ1個トランスクリス、カスカっていうのはまず1個の分かれる、意思決定で分かれるところでなのでこのトランスクリプトまで一気通貫でやってくれるのを見て、もうこっちで行こうっていうふうに決まったんですよ。なるほどね。まずその一個大きなネックのところが、やろうと思えばトランスクリプト作るのに、前はそのズームで編集した音源をもう一回ダウンロードして、それをどっか別の書き起こしツールにアップロードして、そっからトランスクリプトもらってとか、そういうふうにするしかなかったんですね。はいはいはい。"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:09:34",
      "text": "っていうところが手間がガッて省けてすごい効率ができたんで、1個のワンプラットフーム、これを使うで1個行きましょうと。のになったのがまず1つ目ですね。なるほど。で、編集のフェーズが終わると次が生成のフーズに入るんですよ。はいはいはい。いろいろね、私たちのタイトルとかね。そう、それそれ。そう。で、2つ目はそれこそAIの使いどころですが、生成形の効率かと。一応RiversideFBの方でも、小納得とかタイトルをデフォルトで作るっていうのがあるんですね。ハシタグとか。になんつーのかな。それでも別にいいんですけど、なんつーの。ちょこちょこ細かいとこ気になるわけですよ。すごい流度が、例えば細かすぎるたりとか、なんかちょっと強調したいとこそこじゃ、なんか割とどうでもいい。内容まで拾う。どうでもいいっていうか、アイスブレクのところまで結構、っぱ最初の方すごい頑張って拾うんですよね。話し手の際。この高性ポドキストってしょっちゅうアイスブレイクで軽く話してからメインに入ることが多いじゃないですか。基本的にメインの割合が薄めになっちゃうんですよ。その処のデフォだと。なるほどね。ちょっとっぱ手入れたいなってカスタマイズしたいなっていうのがもともとあってで結局私はどうやってたかっていうと音源から頑張ってやる場合はジミニに入れるテキストからやる場合はチャットGPTとかクロードとかいろんなとこ渡り歩いて決めるってやってたんですねなんだけどこれももうなんかもはや何回もやってるからチャットGPTのなんかなんていうの履歴とかプメモリーの機能もあって、結構その秘伝のタレみたいなやつが。対的飾れちゃってるね。最近はそこにトランスクリプト入れると、まあまあ一発でいい感じの出してくるようになったんですよ。ちゃんとなんか学んじゃったのね。学んでくれて、なんかここから抜け出せなくなっちゃって、これでいいわって感じ。ちゃんとこっちの糸をもう組んでくれるように、"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:11:55",
      "text": "教育されてなってきたんですよ。レドが育ってきて。手直しがめっちゃ少なくなって、もうこれでいいじゃんってなったと。なるほどね。一応これ地味にタイトルとか小ノートの雰囲気とかトーンとかそういうのもそうなんだけど、広告入れるポイントがどことかそういうのも地味にちょっと大変で。手で一番最初はどうやってたかって話しながら多ここかなみたいなのとか聞きながらここかなみたいなので一回ここで呼吸入れなきなとかそういう感じだったんですけどもその辺全部考えなくてよくなったなんで2点目の生成系の効率化を移動はするけどちょっとGPTでやるとで1個どうしても主導なところがあってそれがあのアート19というプットフォームへのここはもうどうにもこうにもこれなんか他のあの同じポドキスト配信してるこの前のミートアップとかでもお話出たんですけど異様にこのなんだシステム連携がやりづらいAPAがないしあのやりづらいあのスポットフイの時の方はまだ全然多分はいはいはいスットフイだったらそのまんまねあのできるうんアップロード同じプラットフーム上だからできてたからめっちゃ良かったんだけどあと19に上げなきいけないのでもうそこは色々やったけどCPプレライトCP使ってらやったけどもうどうしようはないんでここはもうしょうがない諦めても手で入れますと音源とタイトルテキストとあとはアドポイントをどこにするっていうのももう手でやるとしょうがないんでこれはなるほどねそこだけ手でやったら公開しますその後にも最後やることがあるんですけどそれが一番最後4点目でまあここ結構ワークフローになるとかなんですよ例えば何があるかっていうと一つ目はウェブサイですね我々自分で持ってるmit.fのウブサイトをこれもなんだろうな"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:14:15",
      "text": "ワンポチでいける状態にはしてたんですけどだいぶ初期の頃にRSS取ってきて最新のこれなんかすごいね初期に本当に昔に書いたスクリプトがすごい優秀で一度もバグったことないんですけどなんかあの本当にリデプロイボタンを押せば最新情報から全部取ってきてウェブサトが反映されるっていう仕組みをだいぶこれは最初の頃に作っててそれはバグってことないんだけど、だんだん人は慣れてくると、そのワンポチ自体もすらもう奥なんですよ。うんうん。いちいち反映されたな。押さなきゃな。バーセルの画面開いて押さないとな。なのすらも省力化したくなってきて。そっちはバセルなんでAPIももちろんあると。はいはいはいはい。なので、でもこの辺ってなんてかAIじゃないですか別になんか。はいはいはいはい。いらないっていうか。単なるスクリプト自動オメーンところだからそこともう一個がもう一個地味にめんくさかったことがSNSポスト用テスト先生これもなんつーか別に変えてもいいんだけどさなんかAppleとSpotifyのリンクを取ってくるとでタイトルとかそうだなタイトルぐらいは取ってこれるんだけどっとね地味にspotifyはAPAがあって例えばゼピアとかであのインテグレーションしてspotifyの最新エピソードリンクは取ってこれてたんですよ今までもなんだけどアップルがなんだかAPIがないのかな取れないっていう問題があって結局アップルの最新のエピソードでもやっぱり内訳見るとフルポドキストクライントの人が一番多いのでそこはちょっとやっぱり外せないかなと思って一応撮ってきてたんですけどでもそれも嫌だからそこも撮ってこれるようにちょっとこの後詳細喋れたらと思うんですけどクロードコードを投稿デングしながら取れるようになったですなので"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:16:35",
      "text": "ここら辺に関してはスクリプトをRSSが更新されたをトリガーとして自分のウェブサイトを回す別にXとかって自動ポストとかはそももAPAが厳しくてもうできないからしかも自動ポストとかちょっと怖いからそこまでしなくていいんだけどテキストだけリンクを取ってくるという採用自体をしたくないんでそのテキストが取れるっていうところそこまでが固まった、できるようになったんですね。はいはい。4つ。で、もうこれ以上は多分もう無理っていうところまで。なるほどね。まあ、でも本当に業務フロー最適化みたいなもんだよね。そうそうそう。何年かかってんだって感じなんだけど。そう、これはしかもね、あの、むずいのが、なんだろう、普段収録してないときはこの必要性に変わられてないんで。尺取しないんだけどいつも出さなきゃなやらなきなっていう時になってうわこれ全これ前回も同じことテレやったよな自動化したいわってだってそこで初めてちょっと作業に入るんですよねなるほどねまあ手動でもできちゃうからねそうそうそうなんですよだから結構時間とんと高いっていうかでもなんか他にもやることあるしなみたいなこれで戦ってなかなかこう進まない時はもうちょっと今回はいい諦めるって言って次回すみたいな感じでめっちゃこのテキストをもうなんつうかブチブチ切られながらやってていつもなんかあれが出たこれはこっちのなんか効率化に行かせそうだとかってキャッチアップしながら取り入れながらちょっとずつ試しながらみたいなもうずっと繰り返していたですけどもうやっと決定版というかですねこれ以上はもういいでしょってとこまで許容できるとそこまでできましただから結局なんかすごい学びだったのはなんか全部を同じやり方で自動化しようとかなんかAI化しようとかなんかっていう考えをやめるやめてやっぱその個別最適のオートメーションで済むところも無理にAI使わなくていいとことかの"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:18:52",
      "text": "切り分けっていうか、その感度転がみたいなのが身につきましたね。はいはい。まあでもやっぱ、本当に人の、なんつの、まあ人手でやってた業務効率を最適化しましょうっていうのってやってるのが一緒だよね。使ってるものが対人じゃなくて、本当システムだっていうのはあるけど。そうね。ね。前はだから、全部を、もうそうだね、システムプグラムとかガスとかでね。やり方が多分逆に1個しかないかった時はもうそれでやろうっていう頭なんで最初からそうだねまあでもさやりリバーサイドもさ最初ちょっと使ってみたけどうんって感じだけど結局そこの発展で割とできることもなんか膨らんだってことでしょそういうことですそういうことですほぼほぼそこのボリュームがかなりでかかったんでってことだよね編集作業のねまあこれもどこまでやるかっていう話でなんかそのね他のポドキスターの人に聞いたらそのまま編集しないで出しちゃうっていう人もめっちゃバンバン出してるってたそうもっと貧乏高い人たちはなんかそういうことをやってるみたいですけどねだからどこまでやるか次第だけどねまあまあまあそういう自動化話を効率化話っていうのをしたかったのが一つなんですけどこれにはちょっと続きがあってですね。実はこれ前回話そうと思って話し入んなかったんですけど、きっかけとしてはですね、深堀FのAIコーディングの現在地っていうT和田さんの回があって、ショーのとハートとか、なんかすっごいそれが刺さってまくって、内容がすべて。あと業務でもちょうど今なんていうかそういった私結構AIの推進業務の効率か推進みたいなちょっと結構マッチしてるようなことを今割と増えてきててそういう業務的なこともあるんですけどすごい刺さったのが結構トピックとしてはバイブコーディングとエージンティックコーディングの違いとかなんかバイブコーディングによるいいところとなんかこういいところよりも悪いところの最近はちょっと目立ってるよねっていうような"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:21:15",
      "text": "そういうだったりとか、そのエンティックコーディングって本当に共同、緒に隣でどっちかがリードするとかで一緒にやるにあたっての下準備というか結局その前だとプンプトエンジニアリングってエンジニがプンプト書いてたけどエージェントの時代になってプロンプトすらもエージェントが考えるんだけどプロンプトの制度っていうのが結構肝なんだけどそこで全部結局はコンテキストが整備されてるかどうかコンテキストエジニリングっていうまた新たなすごいいろんな概念がまたなんかそう今だとプロフトエンジニアリングじゃなくてなんかコンテキストエンジニリングって言らしいですけどはいはいまあ例えるならすごいわかりやすい例えがルンバがそのまま部屋がごちゃごちゃのまま走らせても性能100%でないよねみたいな話それなりにこうあのルンバが気持ちく走れる状態にな初めて100%性能が出るみたいなそういう話とかなんかね最近他にも例えばその100キロ出せるレーシングカーみたいなやつが40キロしかいろんなコンテキストの整備だとか本当は拡張とかプラグインとかですっい色々できることがあるのにデフォルトでそのツールを使ってると40キロしか出ないよねみたいな話とかもあったりとかしてそういったコンセプトみたいなところとかが色々刺さってですねあとはあれですねAI時代のエンジニの育成論みたいな話も出てたりしてどこでも議論されてるよねそうそうそうめちゃちゃ面白くてこの中で1個私もやろうって思ったのがクードコードを実はあまり触ったことがなかったんですけどクロードだけは課金してなかったから自分がちゃんとGPDとOpenAIとGINIでできることを基本的にはクードそんなにって感じだったパーソナルなフリーのプランあれでしか使ってなかったんですけどはいはいはいまあ今もうなんかカーソルよりもなんかねクードコードがめっちゃ効くしいや私今ちなにやってるんですよあ嘘やってんのああクードコードを今CLIで動かしているいやあれ一回やり出したら私もちょっと抜け出せなくなってしまってそうなんだで私はほら何つの行動を書く人間ではないからそういろいろね"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:23:35",
      "text": "これってみんなどうなんだろう?どこまで自立的にやらせてるんだろう?って気になってる。結構寄り添ってなきいけなくない?どうなの?あーいけない。なんつーか。時間解けるなって思いながらやってんのよ。どうなの?これ。たぶん使いどころ使い方かと思っていて、ロードコードをどうだろう?コーディングに使って多いのかもしれないんだけど私はコーディングでも使ったんですけどそれ以外でも使ってて例えばまだそんな使っててというほどの経験値はないんだけど例えばなんですけどやっぱMCPとの拡張性がすごい高いっていうところは一つっていうのもこのクライアント上で自然言語で例えばだけどブラウジング、プヤとCPを使って、今のAIの最新情報、今日のやつを取ってきてとか言って言と、ブラウザ立ち上がって収集情報収集してきてくれたりとか。もうちょっと書き込み系の使い方も多分できるんだけど、なんかね、ちょっとトライしたんだけど認証かますとやっぱりうまくいかなくって、まだそこで一般それは止まってんだけど。でもそういうなんつーか、全部クライアントコマンドライン上でなんか色々指示が出せるっていうところともう一つが結構これはエンジニの信用性高いのかなって思ったのが主戦場がターミナルなのでなんか急に今どこにいるんだろうPWDとかって打てるっていうのが嬉しいなんかいちいち今どこのディクトリーの配下にいますかとか聞かなくてもコマンドモードっていうのがビックリマークってやってコマンドモードにすると急にPWDとかって打ったりなんかLLコマドLSとかあとはMKディレクトリーディクトリー作るコマンドとかちょっとカールちょっと叩くとか"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:25:58",
      "text": "そういう、多分、老人会みたいなややもかもしれないけど。そうなの?これそうなの?いや、わかん違うか。そんなことないか。わかんない。私も、然さ、私もパブリック種類になってからのコマンド事情全然知らないから、めっちゃ使うなと思って聞いてた、今。いや、なんか最近だと、これ、NSLookupとか、多松さんとか普通に使うのろう。使う、使う。なんかそういうのを急に。なんだろう逆にやりたいことこれだけど自然言語で言う方がめんくさいみたいなことを急にやったりもできるとかってのはや強いそれはそう私もだからそうねそうそこらへんが魅力なのかなというのとコーディングとして使う方法もやってんですけどちょっとね実はまだ私あのこのTワードさんの回でacsであのできるacs上でクロードコードが動かせるっていうそれがすごい魅力的でやりたいなと思ったんですけどまだ今とかとしてacs上ではうまく動かす対話モードっていうのが今多デフォルトとうまくいかなくてまあ今できてないんで普にターミナルで一旦動かしてるんですけどそうですね今んとこコーディングとしては普通にカールの中で立ちげちゃったりとかポジクト開いてなんかやるとかはそれだと今までとあまり変わんないっちゃ変わんない使い方なんですけどねカーソルの中で別にモデルをクードコードにしてるとほぼニアリーールみたいな感じにはなっちゃってるんだけどでもたまにクロードコードを使うとさっきみたいなPWDみたいな急にできたりとかもするんで一旦さっきのちょっとした開発のところに関してはカーソルの中でクードコードをインテグレーンみたいにして立ち上げてその中でコマンドとか自然言語とか叩いてるちょっとこの使い方をみんなしてるかよくわかんないんですけど一旦そうやってコーディングはしてるんですよで、なんかそのいい面とまだまだだなって思ってるところがあってこれはなんかクードコードっていうかもしかしたらモデルの話なのかもしれないんですけどやっぱりこのあのなんていうのかな"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:28:18",
      "text": "コンフリクトとかGitでのコンフリクトだったりとかなんかアップデート久しぶりに開いたプジェトで自分のウェブサトのプロジェクトとか久々に開いたらアップデート祭りみたいなのほどNPMみたいなで、昔だったら依存関係あれを上げたらこっち側は依存関係があこっちも上げなきいけないでもこうでとこれを上げるとこっちはなんか対応してなくてなんかリアクトとかそれすごい多かったんですけどこっちはやっぱダウンブレしなきいけないみたいなのをもうオートでやってくれるっていうその精神もすごい久しぶりに開いたプロジェクトでそうなっちゃいがちのやつをまあオート解決してくれたりとかあとあのギットでよくねあのコンフリクトとかした時にあーめんくさみたいになるなんか戻してなんかリセットコマンドみたいなのを前だったら発行してなんちゃらかんちゃらみたいなのがもうもうそこらへん頭もうわかんなくなっちゃいます私コマンドなんだかもうやってくれるからそういうまあ確かにあるしここらへんはもうもはやエンジニアが手でやらなくてもいいかもなってところは全部やってくれるはいはいそこらへんのメンタル的にも良いはいはいはいいってやっぱりずっと開発の最前線の現場で毎日コードを書いて触っているとかだったらいいんですけどなんかだんだん歳を取ってきてそうじゃなくなってくるとなんか昔作ったやつもう回ちょっと数年ぶりに開くみたいなことが発生するときにすごいやっぱりこのLLっていうのは素らしいなとなるほどねのが一点と結構まだまだだなっていうのがまあ発展途上なのかもしれないですけどこれもあの千田さんの話でもとにかく設計ができる人っていうか人間まだまだそういった設計だとか提案とかみたいなところは主導人間がやってるよねっていう話もあったんだけどあの何があったかっていうとコーディング面の信頼度っていうのがまあ育成路の話にもつながるんですけど"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:30:42",
      "text": "なんかね、引き出しが、分かんない。これはコンテキストイジニリングで多分解決するんだけど、デフォルトで最初使ってた時に問題があって、さっき言ってたSNSのポストのテキストリンクを取得したいっていう、まずタスクが。そういう解決したい問題、イシューがあると。最初その目的だけを言ったら、コーディングRSS.XMLからスクレーピングして、正規表現、REGXだけでガンバトルっていうやり方を始めたんですよ。つまり、XML取ってきて中身で、わーって正規表現で引っけて、結構泥くさーく、こんなのでも自分で手でもう掛けないわって思いながら見てたんですけど。そうやってやってきて、なんかその中にあ、Spotifyのリンクがありましたみたいな感じで拾ってきたんだけど、とももなんか最初そのSpotify全然違うリンク出してくるんですよ。で、なんでなのかと思って見てたら、どうもそういうやり方をしてたから、たまたま私が小ノートに貼ったなんかSpotifyのリンクを拾ってきてただけだったんですね。ーん。おいおいって思って。いや、あなたさあみたいなあのこのご時世なんだからLL入れてなんかもうちょっとクロールするとかなんかもうちょっとできないのみたいな感じそれ違うんだけどもちろん問題をしてきてねそれは小ノートのやつで本当はそのSpotifyの何だろうプットフォームチャンネルに飛んでそこでそのなんとか最新のエピソードを撮ってきてほしいんだよっていうのを言うわけですよねうんうんうんうんうんあーなるほどそれはいいですねみたいになってそしたらなんかジミニーを入れてそれをコールするみたいな方法でブワって作り出したんですねうんうんうんうんうんやっぱりAI入れてクールするみたいに応募に変えたからなんか取れたんですけどで、Appleは取れたけどSpotifyはなんかできなかったんでフールパックしていくといつもこれすごい問題だなと思うんですけど良いように最後合わせてくるからそれめっちゃある!なんかわかる!"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:32:59",
      "text": "私もさ、いやそれいいんかなみたいないやよくないじゃないですかなんかデフォルトのやつを差し込んできましたみたいな感じでいつもやられちゃうんですよねはいはいうんそれで困るからちょっと最新の撮ってきてほしいなんでSpifyは撮れないのAppleは撮れたのにって聞いたら調査してきてSpotifyはあのSPAだからですっていうんですね分かったあのHTMLでクロールした時に後から撮ってくるからえっと見にった時点では空の側のHTMLしかないんですって言って行ってきてあ、なるほどねーってなって、あ、そうなんだってだから中身が取れなかったんで代わりにとか言ってきたから、じゃあさーじゃあさーみたいなCPとか使ったらどう?ってこっちが言ってなんかプイライトCPとかそれこそ使ったら描画されてからそのウェブのね画面から取ってきたらどうなの?みたいなはいはいはい。アブオーブリリアントですねとか言って、で、完成したんですよってこれってつまり結局アイディア発想の部分って私が言ったから完成したっていう感じになっちゃってて。ーめっちゃわかるそれ。なんかさ、だからよ、それでそのXA路の話を聞きながら、結局なんかやっぱりその一瞬回ってソフウでこれってなんか別にシニアvsジニアとか言いたいわけでもなくてですよなんかある程度この経験則的なところだったりとかL性質とかなんかいろいろ総合的判断しないとうまく使えないっていうのはそうなんだよなって思いながら別にその構造は降りたいとかじゃないんだけどあの一番なんか到達されるのはシニア対ジニアとかじゃなくてなんか頑固なエンジニアだみたいな話だとんだからやり方を変えないみたいなのを変えていくっていう人がやっぱどのネジでも伸びるよねみたいな話が出てましたけどもういろいろ腹落ちながら聞いてたって感じですねまあ私もだから今さあスラックアプリをちょっと作ってたので"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:35:09",
      "text": "動作するとこまでは行ったんだけど、ちょっと修正食われすぐデグレすんのね。なんかいやいやみたいな。あんたさっきもここでつまずいてたよねみたいな。で、一回やってうまくいかないったから、何かお前最初に要件定義してって言ったのよ。とにかくまず要件定義してって、で、必ず修正が入ったらそこを見て、に書き込んで絶対そこを参照してって言ってるけど、意外とやってくんないかったりするわけよ。なんか、俺みたいな。で、なんか毎回同じところで同じような動作を挙動して、エラーが出てるから、いや、さっきやったよね、みたいな。さっきも同じところでこけてたから、同じふうにならないようにしてみてって言うと、あっ、そうですね、みたいな。る。あっ、そうですね、みたいな。超手がかるわ、とかって思いながら、私はね、なんかたぶその間のコーディングのところはそもそも私はできないから正直ここおかしいのかなとかって思うところとかもはっきり正直わからないところも多いからさそうなんだけどでもなんかそのめっちゃなんか手のかかる子だなみたいなそうなんかまだハンドルこっちで握ってないといけなくてっていうのもその多分同じことばっかり繰り返すときは多分それこそルールズとかルールのと言うやつに書くん書いたりはするんだけどあとはクロードとかだと最初だとなんかあのプロジクト構造を最初にあのチェックしてこういう構造だってそのコンテキストの部分をまあなんか先に書き出すとかそういうことはやるんだけどまあやっぱ今言ってたみたいな問題はやっぱ怒るからここでなんつーか私が言いたいな頑張ってこうねなんかな投げ出したくなるんだけどなんだこれめんくさいなってなったりもするんですけどそれと頑張ってなんかじゃあどうしたらよく言うことを聞くようになるのだみたいな姿勢でね頑張るいやー私はだからもうそれをなんかめっちゃやってておこなにちかちょっとやっててわかるでもなんか私は正直早く枯れてくれAIって思ってる本当ですよね枯れて本当に早く枯れてってもうちょっとマジででも言うてこのスピードを見てると多分さある程度"
    },
    {
      "speaker": "Yu Kamiya",
      "timestamp": "00:37:31",
      "text": "なんていうのもやってくれるまで、そう遠くはなかろうと。なんか私みたいなね。いや、分かんないですよ。ゆちゃんみたいに、毎日SSAAIを活用して、なんかもう本当にもの作ってるぜっていう人たちが、この最新の技術をさ、なんか触りながら、あぁって思うのと、私みたいな人間がね、やっぱさ、やるって、やってるのは、なんかやっぱね、すごく無駄な思考錯誤をしてるなって感じがすごいしちゃうんだよ。でなぜなら別に私って別にもともとねそのがっつりコーデングする人間じゃないームだま単純にそんなそのシステム的な部分がか概念しかわからないようにやなからやっぱそのなんだろうなこれはもう私がつくっ使ってもちょっとしたゴミしかできねえんじゃないみたいな気持ちになるいやいや私もそうですよマジでバイブコーデングで一日で作ったやつとかなんかあげたりけどもっとゴミ一瞬でゴミですよだからもうさこれはなんかもう本当になんかそういうさあみんな使ってる人たちがこれをなんかもうどんどんアップデートしてもらってどんどん賢くなってもらってまあねそうだねそうそうやっぱりそのなんだよっとその概念不観してAIがなんか物事をさあこう動かせる見れるみたいな状態にならないと逆に言とこう何も気づかない人からしたらただもずっとなんかエンターボトン押してるだけのなんか世界線じゃんだから本当にこれはまだ私が使うにはちょっとなんかちゃんと使えないかもってちょっとなんかわかるよって本当に一般的ななんか新入社員にも似たないかなもしかしたらなんかわかんない高校生とかなんか大学生ぐらいの人にお仕事ってこうやってやろうねみたいな感じの会話をしてる感じがまだする。はい、終わってしまいそうな感じなんですけど。"
    }
  ]
}